<!DOCTYPE html>
<html>
  <head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css"/>
    <link rel="stylesheet" href="/static/file-upload-with-preview.min.css"/>
    <link rel="stylesheet" href="/static/style.css" />
  </head>
  <body>
    <div class="geek-combat chat-app">
      <div class="left-wrap">
        <% friends = data.online_users %> <%- include('../partials/header',
        {appData: appData, userDetails: data.userDetails}); %> <%-
        include('../partials/friendList', {friends: friends}); %>
      </div>
      <div class="right-wrap">
        <%- include('../partials/chatInterface', {friend: {friends}, chats:
        []}); %>
      </div>
    </div>
  </body>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script>
    var socket = io({ transports: ["websocket"], upgrade: false });
    socket.emit("connecting", { uuid: $(".user-profile").data("uuid") });
    var upload;

    function prepareTextMsgBubble(data) {
      return (
        `<div class="msg ` +
        data.msg_class +
        `">
            <div class="msg-img" style="background-image: url('/images/male_avatar.png');"></div>
            <div class="msg-bubble">
                <div class="msg-info">
                    <div class="msg-info-name"> ` +
        data.username +
        `</div>
                    <div class="msg-info-time">` +
        new Date().getHours().toString().padStart(2, "0") +
        ":" +
        new Date().getMinutes().toString().padStart(2, "0") +
        `</div>
                </div>
                <div class="msg-text">` +
        data.txt_msg +
        `</div>
            </div>
        </div>`
      );
    }

    function capitalizeText(text) {
      return text.replace(/^\w/, (c) => c.toUpperCase());
    }

    function scrollChatBox() {
      $(".msger-chat")
        .stop()
        .animate(
          {
            scrollTop: $(".msger-chat")[0].scrollHeight,
          },
          800
        );
    }

    function appendTextMsgBubble(data) {
      $(".msger-chat").append(prepareTextMsgBubble(data));
    }

    function clearTextArea() {
      $(".msger-input").val("");
    }

    function fileUploadPreview() {
      $.getScript('/js/file-upload-with-preview.min.js', function () {
        upload = new FileUploadWithPreview('myUploader',{
          showDeleteButtonOnImages: true
        })
      });
    }

    var final_transcript = "";
    var recognizing = false;
    var ignore_onend;
    var recognition;

    function speechToText() {

      recognition.continuous = true;
      recognition.interimResults = true;

      recognition.onstart = function () {
        recognizing = true;
      };

      recognition.onerror = function (event) {
          ignore_onend = true;
      };

      recognition.onend = function () {
        recognizing = false;
        if (ignore_onend) {
          return;
        }
        if (!final_transcript) {
          return;
        }
      };

      recognition.onresult = function (event) {
        var interim_transcript = "";
        if (typeof event.results == "undefined") {
          recognition.onend = null;
          recognition.stop();
          return;
        }
        for (var i = event.resultIndex; i < event.results.length; ++i) {
          if (event.results[i].isFinal) {
            final_transcript += event.results[i][0].transcript;
          } else {
            interim_transcript += event.results[i][0].transcript;
          }
        }
        final_span.innerHTML = final_transcript;
        interim_span.innerHTML = interim_transcript;
      };
    }

    function startButton() {
      if (!("webkitSpeechRecognition" in window)) {
        console.log("Not Supported")
      }
      else {
        recognition = new webkitSpeechRecognition();
        if (recognizing) {
          recognition.stop();
          return;
        }
        final_transcript = "";
        recognition.start();
        ignore_onend = false;
        final_span.innerHTML = "";
        interim_span.innerHTML = "";
      }
    }

    var debounceRefreshFriendListTimeout = null;
    var debounceRefreshClientCallback = function (socket_data) {
      var refreshFriendList = function (socket_data) {
        $.ajax({
          type: "POST",
          url: "/compile/template/friend-list",
          success: function (data) {
            $(".left-wrap .friend-wrapper").replaceWith(data.html);
          },
          error: function (error) {
            console.log(error);
          },
        });
      };

      clearTimeout(debounceRefreshFriendListTimeout);
      debounceRefreshFriendListTimeout = setTimeout(refreshFriendList, 0);
    };
    socket.on("connect_client", debounceRefreshClientCallback);
    socket.on("disconnect_client", debounceRefreshClientCallback); // Todo: online / offline flag

    var appendTextMessageBubble = function (data) {
      appendTextMsgBubble({
        msg_class: "left-msg",
        username: capitalizeText(data.name),
        txt_msg: data.message,
      });
    };
    socket.on("trigger_text_message", appendTextMessageBubble);

    var sendMessage = function (data) {
      if (data.data.friendDetails.uuid != $(".friend-details").data("uuid")) {
        $.ajax({
          type: "POST",
          url: "/compile/template/chat-interface",
          headers: {
            "content-type": "application/json",
          },
          data: JSON.stringify(data),
          dataType: "json",
          success: function (result) {
            $(".right-wrap").html(result.html);
            scrollChatBox();
            fileUploadPreview();
          },
          error: function (error) {
            console.log(error);
          },
        });
      }
    };

    // Event Listeners
    $(document).on("click", "li.friend-list", function (evt) {
      sendMessage({
        data: {
          friendDetails: {
            uuid: $($(evt.target).parents("li.friend-list:first")).data("uuid"),
          },
          selfDetails: {
            uuid: $(".user-profile").data("uuid"),
          },
        },
      });
    });

    $(document).on("click", ".msger-send-btn", function (evt) {
      evt.preventDefault();

      appendTextMsgBubble({
        msg_class: "right-msg",
        username: "You",
        txt_msg: $(".msger-input").val(),
      });

      socket.emit("send_text_message", {
        friendDetails: {
          uuid: $(".friend-details").data("uuid"),
        },
        selfDetails: {
          uuid: $(".user-profile").data("uuid"),
        },
        msgDetails: {
          messageType: "text",
          message: $(".msger-input").val(),
        },
      });

      clearTextArea();
      scrollChatBox();
    });

    $(document).on("click", "#file-upload", function (evt) {
      $('.custom-file-container__custom-file__custom-file-input').trigger('click')
    });

    var refreshMessageList = function () {
      $.ajax({
        type: "POST",
        url: "/compile/template/chat-body",
        headers: {
          "content-type": "application/json",
        },
        data: JSON.stringify({
          data: {
            friendDetails: {
              uuid: $(".friend-details").data("uuid"),
            },
            selfDetails: {
              uuid: $(".user-profile").data("uuid"),
            },
          },
        }),
        dataType: "json",
        success: function (data1) {
          $(".chat-interface-body").replaceWith(data1.html);
        },
        error: function (error) {
          console.log(error);
        },
      });
    };

    $(document).on("DOMSubtreeModified", ".custom-file-container", function(){
      if (upload != undefined && upload.currentFileCount) {
        $(".custom-file-container").show()
      }
      else {
        $(".custom-file-container").hide()
      }
    });
  </script>
</html>
